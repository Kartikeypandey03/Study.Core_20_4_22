<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@drawable/overviewbackground"
    tools:context=".Javacharacters">
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="vertical">

        <TextView
            android:layout_width="match_parent"
            android:layout_height="50dp"
            android:text="JAVA CHARACTERS"
            android:textAlignment="center"
            android:paddingTop="20dp"
            android:textSize="25dp"
            android:textColor="@color/white"
            android:fontFamily="sans-serif-condensed-medium"/>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_marginLeft="12dp"
            android:layout_marginRight="10dp"
            android:fontFamily="@font/didact_gothic"
            android:paddingTop="15dp"
            android:text="Normally, when we work with characters, we use primitive data types char.\nHowever in development, we come across situations where we need to use objects instead of primitive data types.\n In order to achieve this, Java provides wrapper class Character for primitive data type char.\nThe Character class offers a number of useful class (i.e., static) methods for manipulating characters.\n\nThe Java compiler will also create a Character object for you under some circumstances.\n For example, if you pass a primitive char into a method that expects an object, the compiler automatically converts the char to a Character for you.\n This feature is called autoboxing or unboxing, if the conversion goes the other way. "
            android:textSize="20dp"
            android:textColor="@color/white" />
        <TextView
            android:layout_width="match_parent"
            android:layout_height="50dp"
            android:text="JAVA ESCAPE SEQUENCE"
            android:textAlignment="center"
            android:paddingTop="20dp"
            android:textSize="25dp"
            android:textColor="@color/white"
            android:fontFamily="sans-serif-condensed-medium"/>

        <ImageView

            android:layout_width="match_parent"
            android:layout_height="403dp"
            android:src="@drawable/escapesequence" />
        <TextView
            android:id="@+id/javacharacters"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_marginLeft="12dp"
            android:layout_marginRight="10dp"
            android:fontFamily="@font/didact_gothic"
            android:paddingTop="15dp"
            android:text="@string/javacharacterslink"
            android:textAlignment="center"
            android:textSize="17dp"
            android:textColor="@color/white" />







    </LinearLayout>
</ScrollView>